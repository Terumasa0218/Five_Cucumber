name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        
      - name: Copy assets
        run: pnpm -w run copy:assets
        
      - name: Type check
        run: pnpm -w run type-check
        
      - name: Lint (apps/hub)
        run: pnpm --filter ./apps/hub run lint
        
      - name: Build packages
        run: pnpm -w run build
        
      - name: Verify Next.js build output
        run: pnpm vercel:check
        
      - name: Run tests
        run: pnpm -w run test

  e2e:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        
      - name: Copy assets
        run: pnpm -w run copy:assets
        
      - name: Build application
        run: pnpm -w run build
        
      - name: Verify Next.js build output
        run: pnpm vercel:check
        
      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps
        
      - name: Run Playwright tests
        run: pnpm exec playwright test
        env:
          CI: true
          
      - name: Upload Playwright report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    runs-on: ubuntu-latest
    needs: [test, e2e]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        
      - name: Copy assets
        run: pnpm -w run copy:assets
        
      - name: Build application
        run: pnpm -w run build
        
      - name: Verify Next.js build output
        run: pnpm vercel:check
        
      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          channelId: live
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
