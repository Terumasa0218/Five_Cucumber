import { validateNickname, normalizeNickname, graphemeLength } from '../nickname';

describe('nickname validation', () => {
  describe('validateNickname', () => {
    test('valid cases', () => {
      expect(validateNickname('test1')).toEqual({ ok: true, value: 'test1' });
      expect(validateNickname('„ÉÜ„Çπ„Éà1')).toEqual({ ok: true, value: '„ÉÜ„Çπ„Éà1' });
      expect(validateNickname('„ÅÇ„ÅÑ„ÅÜ')).toEqual({ ok: true, value: '„ÅÇ„ÅÑ„ÅÜ' });
      expect(validateNickname('„Ç´„Çø„Ç´„Éä')).toEqual({ ok: true, value: '„Ç´„Çø„Ç´„Éä' });
      expect(validateNickname('Êº¢Â≠ó')).toEqual({ ok: true, value: 'Êº¢Â≠ó' });
      expect(validateNickname('Ôº°Ôº¢Ôº£')).toEqual({ ok: true, value: 'ABC' }); // NFKCÊ≠£Ë¶èÂåñ
    });

    test('length validation', () => {
      expect(validateNickname('')).toEqual({ ok: false, reason: 'length' });
      expect(validateNickname('abcdefghi')).toEqual({ ok: false, reason: 'length' }); // 9ÊñáÂ≠ó
    });

    test('charset validation', () => {
      expect(validateNickname('test 1')).toEqual({ ok: false, reason: 'charset', bad: [' '] });
      expect(validateNickname('testüò∫')).toEqual({ ok: false, reason: 'charset', bad: ['üò∫'] });
      expect(validateNickname('test_')).toEqual({ ok: false, reason: 'charset', bad: ['_'] });
    });
  });

  describe('normalizeNickname', () => {
    test('normalization', () => {
      expect(normalizeNickname('  test  ')).toBe('test');
      expect(normalizeNickname('Ôº°Ôº¢Ôº£')).toBe('ABC');
      expect(normalizeNickname('ÔºëÔºíÔºì')).toBe('123');
    });
  });

  describe('graphemeLength', () => {
    test('grapheme counting', () => {
      expect(graphemeLength('test')).toBe(4);
      expect(graphemeLength('„ÉÜ„Çπ„Éà')).toBe(3);
      expect(graphemeLength('„ÅÇ„ÅÑ„ÅÜ')).toBe(3);
      expect(graphemeLength('Êº¢Â≠ó')).toBe(2);
    });
  });
});
